name: CI - Validate Secrets

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  actions: read
  contents: read

jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate required secrets exist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          
          REPO="${GITHUB_REPOSITORY}"
          echo "üîç Validating required secrets in ${REPO}"
          echo ""
          
          # Required secrets for the Quiet Link Validator workflow
          REQUIRED_SECRETS=(
            "NOTION_TOKEN"
            "LINKCHECK_DB_ID"
            "RADAR_DB_ID"
            "PROJECT_TRACKER_DB_ID"
          )
          
          # Fetch all secrets using gh api
          echo "üìã Fetching secrets list..."
          SECRETS_JSON=$(gh api "repos/${REPO}/actions/secrets" --jq '.secrets[].name')
          
          if [[ -z "${SECRETS_JSON}" ]]; then
            echo "‚ö†Ô∏è  Warning: Could not fetch secrets (may be a permissions issue)"
            echo "This is expected on pull requests from forks"
            exit 0
          fi
          
          # Check each required secret
          MISSING_SECRETS=()
          for secret in "${REQUIRED_SECRETS[@]}"; do
            if echo "${SECRETS_JSON}" | grep -q "^${secret}$"; then
              echo "‚úì ${secret} - exists"
            else
              echo "‚ùå ${secret} - MISSING"
              MISSING_SECRETS+=("${secret}")
            fi
          done
          
          echo ""
          
          if [[ ${#MISSING_SECRETS[@]} -eq 0 ]]; then
            echo "‚úÖ All required secrets are configured!"
            exit 0
          else
            echo "‚ùå Missing ${#MISSING_SECRETS[@]} required secret(s):"
            printf '   - %s\n' "${MISSING_SECRETS[@]}"
            echo ""
            echo "üí° To add secrets, use:"
            echo "   - GitHub UI: Settings ‚Üí Secrets and variables ‚Üí Actions ‚Üí New repository secret"
            echo "   - GitHub CLI: gh secret set SECRET_NAME --body 'secret_value'"
            echo "   - Automation: python automation-utilities/upsert_secrets_and_dispatch.py"
            exit 1
          fi

      - name: Validate secret values (optional check)
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          LINKCHECK_DB_ID: ${{ secrets.LINKCHECK_DB_ID }}
          RADAR_DB_ID: ${{ secrets.RADAR_DB_ID }}
          PROJECT_TRACKER_DB_ID: ${{ secrets.PROJECT_TRACKER_DB_ID }}
        run: |
          set -euo pipefail
          
          echo "üîç Validating secret values are accessible..."
          echo ""
          
          # Check if secrets are accessible (non-empty)
          # Note: We can't see the actual values, only check if they're set
          
          check_secret() {
            local name=$1
            local value=$2
            
            if [[ -n "${value}" ]]; then
              echo "‚úì ${name} - accessible (length: ${#value})"
            else
              echo "‚ö†Ô∏è  ${name} - empty or not accessible"
            fi
          }
          
          check_secret "NOTION_TOKEN" "${NOTION_TOKEN:-}"
          check_secret "LINKCHECK_DB_ID" "${LINKCHECK_DB_ID:-}"
          check_secret "RADAR_DB_ID" "${RADAR_DB_ID:-}"
          check_secret "PROJECT_TRACKER_DB_ID" "${PROJECT_TRACKER_DB_ID:-}"
          
          echo ""
          echo "‚ÑπÔ∏è  Secret value validation complete"
          echo "Note: Empty secrets may indicate they haven't been set yet"
